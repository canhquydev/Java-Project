/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;
import CRUD.layDuLieuSQL;
import Object.CaLamViec;
import Object.NhanVien;
import Object.NhanVienCaLamViec;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import java.awt.Color;
import java.sql.CallableStatement;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import java.sql.SQLException;
import java.sql.Time;
/**
 *
 * @author HoCanhQuy
 */
public class tabQuanLyCaLamViec extends javax.swing.JPanel {

    DefaultTableModel tableModel, model;
    layDuLieuSQL layDuLieu = new layDuLieuSQL();
    int selected = -1;
    public tabQuanLyCaLamViec() {
        initComponents();
        FlatSVGIcon iconAdd = new FlatSVGIcon("Images/add.svg", 25, 25);
        btnThemCa.setIcon(iconAdd);
        FlatSVGIcon iconDel = new FlatSVGIcon("Images/delete.svg", 25, 25);
        btnXoaCa.setIcon(iconDel);
        FlatSVGIcon iconChange = new FlatSVGIcon("Images/edit.svg", 25, 25);
        btnSuaCa.setIcon(iconChange);
        FlatSVGIcon iconRefresh = new FlatSVGIcon("Images/refresh.svg", 25, 25);
        btnLamMoi.setIcon(iconRefresh);
        FlatSVGIcon iconAddca = new FlatSVGIcon("Images/add.svg", 25, 25);
        btnThemCTCa.setIcon(iconAddca);
        FlatSVGIcon iconDelete = new FlatSVGIcon("Images/delete.svg", 25, 25);
        btnXoaCTCa.setIcon(iconDelete);
        tbCaLamViec.setShowGrid(true);
        tbCaLamViec.setGridColor(new Color(224, 224, 224));
        tbChiTietCa.setShowGrid(true);
        tbChiTietCa.setGridColor(new Color(224, 224, 224));
        layDuLieu();
    }
    public void layDuLieu(){
        tableModel = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; 
            }
        };
        
        
        tableModel.addColumn("Mã ca");
        tableModel.addColumn("Giờ bắt đầu");
        tableModel.addColumn("Giờ kết thúc");
        model = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; 
            }
        };
        model.addColumn("Ngày làm");
        model.addColumn("Tên nhân viên");
        model.addColumn("Ca làm việc");
        tbChiTietCa.setModel(model);
        cbCaLamViec.removeAllItems();
        cbCaLamViec.addItem("Chọn ca làm việc");
        for(CaLamViec ca: layDuLieu.getDsCaLamViec()){
            cbCaLamViec.addItem("Từ " + ca.getGioBatDau() + " đến " + ca.getGioKetThuc());
            tableModel.addRow(new Object[]{
                ca.getMaCa(),
                ca.getGioBatDau(), 
                ca.getGioKetThuc()
            });
        }
        tbCaLamViec.setModel(tableModel);
        
        cbTenNhanVien.removeAllItems();
        cbTenNhanVien.addItem("Chọn nhân viên");
        for(NhanVien nv: layDuLieu.getDsNhanVien()){
            cbTenNhanVien.addItem(nv.getHoTen());
        }
    }
    public void layChiTiet(int maCa){
        model = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; 
            }
        };
        model.addColumn("Ngày làm");
        model.addColumn("Tên nhân viên");
        model.addColumn("Ca làm việc");
        tbChiTietCa.setModel(model);
        for(NhanVienCaLamViec ct: layDuLieu.getDsNhanVienCaLamViec()){
            if(ct.getMaCa() == maCa){
                String ten = "";
                for(NhanVien nv: layDuLieu.getDsNhanVien()){
                    if(ct.getMaNhanVien() == nv.getMaNhanVien()){
                        ten = nv.getHoTen();
                        break;
                    }
                    
                }
                model.addRow(new Object[]{
                    ct.getNgayLam(),
                    ten, 
                    ct.getMaCa()
                });
            }
        }
        tbChiTietCa.setModel(model);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTimeChooserDemo1 = new lu.tudor.santec.jtimechooser.demo.JTimeChooserDemo();
        jTimeChooserDemo2 = new lu.tudor.santec.jtimechooser.demo.JTimeChooserDemo();
        pnCaLamViec = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnThemCa = new javax.swing.JButton();
        btnSuaCa = new javax.swing.JButton();
        btnXoaCa = new javax.swing.JButton();
        txtGioBatDau = new javax.swing.JTextField();
        txtGioKetThuc = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbCaLamViec = new javax.swing.JTable();
        pnChiTietCaLamViec = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbTenNhanVien = new javax.swing.JComboBox<>();
        cbCaLamViec = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtNgayLam = new com.toedter.calendar.JDateChooser();
        btnThemCTCa = new javax.swing.JButton();
        btnXoaCTCa = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbChiTietCa = new javax.swing.JTable();

        pnCaLamViec.setBackground(new java.awt.Color(255, 255, 255));
        pnCaLamViec.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ca làm việc", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        jLabel1.setText("Giờ bắt đầu:");

        jLabel2.setText("Giờ kết thúc:");

        btnThemCa.setBackground(new java.awt.Color(51, 204, 255));
        btnThemCa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThemCa.setText("Thêm ca làm việc");
        btnThemCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemCaActionPerformed(evt);
            }
        });

        btnSuaCa.setBackground(new java.awt.Color(51, 204, 255));
        btnSuaCa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSuaCa.setText("Sửa ca làm việc");
        btnSuaCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaCaActionPerformed(evt);
            }
        });

        btnXoaCa.setBackground(new java.awt.Color(51, 204, 255));
        btnXoaCa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXoaCa.setText("Xoá ca làm việc");
        btnXoaCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaCaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnCaLamViecLayout = new javax.swing.GroupLayout(pnCaLamViec);
        pnCaLamViec.setLayout(pnCaLamViecLayout);
        pnCaLamViecLayout.setHorizontalGroup(
            pnCaLamViecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCaLamViecLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnCaLamViecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnCaLamViecLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGioKetThuc, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE))
                    .addGroup(pnCaLamViecLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGioBatDau)))
                .addGap(32, 32, 32)
                .addGroup(pnCaLamViecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnThemCa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSuaCa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnXoaCa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32))
        );
        pnCaLamViecLayout.setVerticalGroup(
            pnCaLamViecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnCaLamViecLayout.createSequentialGroup()
                .addGroup(pnCaLamViecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnCaLamViecLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(btnThemCa)
                        .addGap(6, 6, 6)
                        .addComponent(btnSuaCa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnCaLamViecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnCaLamViecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(txtGioKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnXoaCa)))
                    .addGroup(pnCaLamViecLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(pnCaLamViecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtGioBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(21, 21, 21))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách ca làm việc", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        tbCaLamViec.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbCaLamViec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCaLamViecMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbCaLamViec);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
        );

        pnChiTietCaLamViec.setBackground(new java.awt.Color(255, 255, 255));
        pnChiTietCaLamViec.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chi tiết ca làm việc", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        jLabel3.setText("Ngày làm:");

        jLabel4.setText("Tên nhân viên:");

        cbTenNhanVien.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbCaLamViec.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setText("Ca làm việc:");

        btnThemCTCa.setBackground(new java.awt.Color(51, 204, 255));
        btnThemCTCa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThemCTCa.setText("Thêm ca");
        btnThemCTCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemCTCaActionPerformed(evt);
            }
        });

        btnXoaCTCa.setBackground(new java.awt.Color(51, 204, 255));
        btnXoaCTCa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXoaCTCa.setText("Xoá ca");
        btnXoaCTCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaCTCaActionPerformed(evt);
            }
        });

        btnLamMoi.setBackground(new java.awt.Color(51, 204, 255));
        btnLamMoi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnChiTietCaLamViecLayout = new javax.swing.GroupLayout(pnChiTietCaLamViec);
        pnChiTietCaLamViec.setLayout(pnChiTietCaLamViecLayout);
        pnChiTietCaLamViecLayout.setHorizontalGroup(
            pnChiTietCaLamViecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnChiTietCaLamViecLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(pnChiTietCaLamViecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnChiTietCaLamViecLayout.createSequentialGroup()
                        .addGroup(pnChiTietCaLamViecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnChiTietCaLamViecLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnChiTietCaLamViecLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(27, 27, 27)))
                        .addGroup(pnChiTietCaLamViecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbTenNhanVien, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNgayLam, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)))
                    .addGroup(pnChiTietCaLamViecLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(cbCaLamViec, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(47, 47, 47)
                .addGroup(pnChiTietCaLamViecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnThemCTCa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnXoaCTCa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                .addGap(47, 47, 47))
        );
        pnChiTietCaLamViecLayout.setVerticalGroup(
            pnChiTietCaLamViecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnChiTietCaLamViecLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pnChiTietCaLamViecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnChiTietCaLamViecLayout.createSequentialGroup()
                        .addComponent(btnThemCTCa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXoaCTCa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLamMoi))
                    .addGroup(pnChiTietCaLamViecLayout.createSequentialGroup()
                        .addGroup(pnChiTietCaLamViecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNgayLam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(pnChiTietCaLamViecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cbTenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(pnChiTietCaLamViecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cbCaLamViec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(10, 10, 10))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách chi tiết", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        tbChiTietCa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbChiTietCa);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnCaLamViec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnChiTietCaLamViec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnChiTietCaLamViec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnCaLamViec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(46, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemCaActionPerformed
        // TODO add your handling code here:
        String gioBatDauStr = txtGioBatDau.getText().trim();
        String gioKetThucStr = txtGioKetThuc.getText().trim();

        if (gioBatDauStr.length() == 5) gioBatDauStr += ":00";
        if (gioKetThucStr.length() == 5) gioKetThucStr += ":00";

        Time gioBatDau = Time.valueOf(gioBatDauStr);
        Time gioKetThuc = Time.valueOf(gioKetThucStr);


        String sql = "{call sp_ThemCaLamViec(?, ?)}"; 
        try (Connection conn = CRUD.ConnectSQL.getConnection(); 
             CallableStatement cs = conn.prepareCall(sql)) {

            cs.setTime(1, gioBatDau);
            cs.setTime(2, gioKetThuc);

            cs.execute();
            JOptionPane.showMessageDialog(this, "Thêm ca làm việc thành công!");
            layDuLieu();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi thêm ca: " + ex.getMessage(), "Lỗi SQL", JOptionPane.ERROR_MESSAGE);
        }
        
//        String sql = "INSERT INTO CALAMVIEC (GioBatDau, GioKetThuc) VALUES (?, ?)";
//        try (Connection conn = CRUD.ConnectSQL.getConnection();
//            PreparedStatement ps = conn.prepareStatement(sql)) {
//            ps.setTime(1, gioBatDau);
//            ps.setTime(2, gioKetThuc);
//            int result = ps.executeUpdate();
//            if (result > 0) {
//                JOptionPane.showMessageDialog(this, "Thêm ca làm việc thành công!");
//                layDuLieu();
//            }
//        } catch (SQLException ex) {
//            JOptionPane.showMessageDialog(this, "Lỗi khi thêm ca: " + ex.getMessage(), "Lỗi SQL", JOptionPane.ERROR_MESSAGE);
//        }
    }//GEN-LAST:event_btnThemCaActionPerformed

    private void btnSuaCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaCaActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbCaLamViec.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một ca để sửa!", "Lỗi", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String gioBatDauStr = txtGioBatDau.getText().trim();
        String gioKetThucStr = txtGioKetThuc.getText().trim();

        if (gioBatDauStr.length() == 5) gioBatDauStr += ":00";
        if (gioKetThucStr.length() == 5) gioKetThucStr += ":00";

        Time gioBatDau = Time.valueOf(gioBatDauStr);
        Time gioKetThuc = Time.valueOf(gioKetThucStr);

        int maCa = (int) tbCaLamViec.getValueAt(selectedRow, 0);
        
        String sql = "{call sp_SuaCaLamViec(?, ?, ?)}"; 
        try (Connection conn = CRUD.ConnectSQL.getConnection(); 
             CallableStatement cs = conn.prepareCall(sql)) {

            cs.setTime(1, gioBatDau);
            cs.setTime(2, gioKetThuc);
            cs.setInt(3, maCa);

            cs.execute();
            JOptionPane.showMessageDialog(this, "Cập nhật ca làm việc thành công!");
            layDuLieu();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi cập nhật ca: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
        
//        String sql = "UPDATE CALAMVIEC SET GioBatDau = ?, GioKetThuc = ? WHERE MaCa = ?";
//        try (Connection conn = CRUD.ConnectSQL.getConnection(); PreparedStatement ps = conn.prepareStatement(sql)) {
//            ps.setTime(1, gioBatDau);
//            ps.setTime(2, gioKetThuc);
//            ps.setInt(3, maCa);
//            int result = ps.executeUpdate();
//            if (result > 0) {
//                JOptionPane.showMessageDialog(this, "Cập nhật ca làm việc thành công!");
//                layDuLieu();
//            }
//        } catch (SQLException ex) {
//            JOptionPane.showMessageDialog(this, "Lỗi khi cập nhật ca: " + ex.getMessage(), "Lỗi SQL", JOptionPane.ERROR_MESSAGE);
//        }
    }//GEN-LAST:event_btnSuaCaActionPerformed

    private void btnXoaCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaCaActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbCaLamViec.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một ca để xóa!", "Lỗi", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa ca này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        int maCa = (int) tbCaLamViec.getValueAt(selectedRow, 0);

        String sql = "{call sp_XoaCaLamViec(?)}"; 
        try (Connection conn = CRUD.ConnectSQL.getConnection(); 
             CallableStatement cs = conn.prepareCall(sql)) {

            cs.setInt(1, maCa);

            cs.execute();
            JOptionPane.showMessageDialog(this, "Xóa ca làm việc thành công!");
            layDuLieu();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi xóa ca: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
//        try(Connection conn = CRUD.ConnectSQL.getConnection()) {
//            String checkSql = "SELECT COUNT(*) FROM NHANVIEN_CALAMVIEC WHERE MaCa = ?";
//            try(PreparedStatement psCheck = conn.prepareStatement(checkSql)) {
//                psCheck.setInt(1, maCa);
//                ResultSet rs = psCheck.executeQuery();
//                if (rs.next() && rs.getInt(1) > 0) {
//                    JOptionPane.showMessageDialog(this, "Không thể xóa! Ca này đã được phân công cho nhân viên.", "Xóa bị chặn", JOptionPane.ERROR_MESSAGE);
//                    return;
//                }
//            }
//
//            String deleteSql = "DELETE FROM CALAMVIEC WHERE MaCa = ?";
//            try(PreparedStatement psDelete = conn.prepareStatement(deleteSql)) {
//                psDelete.setInt(1, maCa);
//                int result = psDelete.executeUpdate();
//                if (result > 0) {
//                    JOptionPane.showMessageDialog(this, "Xóa ca làm việc thành công!");
//                    layDuLieu();
//                }
//            }
//
//        } catch (SQLException ex) {
//            JOptionPane.showMessageDialog(this, "Lỗi khi xóa ca: " + ex.getMessage(), "Lỗi SQL", JOptionPane.ERROR_MESSAGE);
//        }

        
    }//GEN-LAST:event_btnXoaCaActionPerformed

    private void tbCaLamViecMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCaLamViecMouseClicked
        // TODO add your handling code here:
        selected = tbCaLamViec.getSelectedRow();
        if(selected >= 0){
            txtGioBatDau.setText(tbCaLamViec.getValueAt(selected, 1).toString());
            txtGioKetThuc.setText(tbCaLamViec.getValueAt(selected, 2).toString());
            int maCa = Integer.parseInt(tbCaLamViec.getValueAt(selected, 0).toString());
            layChiTiet(maCa);
        }
    }//GEN-LAST:event_tbCaLamViecMouseClicked

    private void btnThemCTCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemCTCaActionPerformed
        // TODO add your handling code here:
        if (txtNgayLam.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn ngày làm!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (cbTenNhanVien.getSelectedIndex() <= 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn nhân viên!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (cbCaLamViec.getSelectedIndex() <= 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn ca làm việc!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        java.sql.Date ngayLam = new java.sql.Date(txtNgayLam.getDate().getTime());
        String tenNV = cbTenNhanVien.getSelectedItem().toString();
        Integer maCa = cbCaLamViec.getSelectedIndex();

        int maNV = -1;
        for (NhanVien nv : layDuLieu.getDsNhanVien()) {
            if (nv.getHoTen().equals(tenNV)) {
                maNV = nv.getMaNhanVien();
                break;
            }
        }
        
        String sql = "{call sp_ThemChiTietCa(?, ?, ?)}"; 
        try (Connection conn = CRUD.ConnectSQL.getConnection(); 
             CallableStatement cs = conn.prepareCall(sql)) {

            cs.setDate(1, ngayLam);
            cs.setInt(2, maNV);
            cs.setInt(3, maCa);

            cs.execute();
            JOptionPane.showMessageDialog(this, "Phân công ca thành công!");
            layChiTiet(maCa);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi phân công ca: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
//        String sql = "INSERT INTO NHANVIEN_CALAMVIEC (NgayLam, MaNhanVien, MaCa) VALUES (?, ?, ?)";
//        try(Connection conn = CRUD.ConnectSQL.getConnection(); PreparedStatement ps = conn.prepareStatement(sql)) {
//            ps.setDate(1, ngayLam);
//            ps.setInt(2, maNV);
//            ps.setInt(3, maCa);
//            ps.executeUpdate();
//            JOptionPane.showMessageDialog(this, "Phân công ca thành công!");
//            layChiTiet(maCa);
//        } catch (SQLException ex) {
//            if(ex.getMessage().contains("PRIMARY KEY")) {
//                JOptionPane.showMessageDialog(this, "Nhân viên này đã được phân công ca này trong ngày đã chọn!", "Lỗi trùng lặp", JOptionPane.ERROR_MESSAGE);
//            } else {
//                JOptionPane.showMessageDialog(this, "Lỗi khi phân công ca: " + ex.getMessage(), "Lỗi SQL", JOptionPane.ERROR_MESSAGE);
//            }
//        }
    }//GEN-LAST:event_btnThemCTCaActionPerformed

    private void btnXoaCTCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaCTCaActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbChiTietCa.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một chi tiết ca để xóa!", "Lỗi", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa phân công này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        String ngayLamStr = tbChiTietCa.getValueAt(selectedRow, 0).toString();
        java.sql.Date ngayLam = java.sql.Date.valueOf(ngayLamStr);

        String tenNV = tbChiTietCa.getValueAt(selectedRow, 1).toString();
        int maCa = (int) tbChiTietCa.getValueAt(selectedRow, 2);

        int maNV = -1;
        for (NhanVien nv : layDuLieu.getDsNhanVien()) {
            if (nv.getHoTen().equals(tenNV)) {
                maNV = nv.getMaNhanVien();
                break;
            }
        }
        
        String sql = "{call sp_XoaChiTietCa(?, ?, ?)}"; 
        try (Connection conn = CRUD.ConnectSQL.getConnection(); 
             CallableStatement cs = conn.prepareCall(sql)) {

            cs.setDate(1, ngayLam);
            cs.setInt(2, maNV);
            cs.setInt(3, maCa);

            cs.execute();
            JOptionPane.showMessageDialog(this, "Xóa phân công thành công!");
            layChiTiet(maCa);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi xóa phân công: " + ex.getMessage(), "Lỗi SQL", JOptionPane.ERROR_MESSAGE);
        }
//        String sql = "DELETE FROM NHANVIEN_CALAMVIEC WHERE NgayLam = ? AND MaNhanVien = ? AND MaCa = ?";
//        try(Connection conn = CRUD.ConnectSQL.getConnection(); PreparedStatement ps = conn.prepareStatement(sql)) {
//            ps.setDate(1, ngayLam);
//            ps.setInt(2, maNV);
//            ps.setInt(3, maCa);
//            int result = ps.executeUpdate();
//            if (result > 0) {
//                JOptionPane.showMessageDialog(this, "Xóa phân công thành công!");
//                layChiTiet(maCa);
//            }
//        } catch (SQLException ex) {
//            JOptionPane.showMessageDialog(this, "Lỗi khi xóa phân công: " + ex.getMessage(), "Lỗi SQL", JOptionPane.ERROR_MESSAGE);
//        }
    }//GEN-LAST:event_btnXoaCTCaActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        txtGioBatDau.setText("");
        txtGioKetThuc.setText("");
        txtNgayLam.setDate(null);
        cbTenNhanVien.setSelectedIndex(0);
        cbCaLamViec.setSelectedIndex(0);
        layDuLieu();
    }//GEN-LAST:event_btnLamMoiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSuaCa;
    private javax.swing.JButton btnThemCTCa;
    private javax.swing.JButton btnThemCa;
    private javax.swing.JButton btnXoaCTCa;
    private javax.swing.JButton btnXoaCa;
    private javax.swing.JComboBox<String> cbCaLamViec;
    private javax.swing.JComboBox<String> cbTenNhanVien;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private lu.tudor.santec.jtimechooser.demo.JTimeChooserDemo jTimeChooserDemo1;
    private lu.tudor.santec.jtimechooser.demo.JTimeChooserDemo jTimeChooserDemo2;
    private javax.swing.JPanel pnCaLamViec;
    private javax.swing.JPanel pnChiTietCaLamViec;
    private javax.swing.JTable tbCaLamViec;
    private javax.swing.JTable tbChiTietCa;
    private javax.swing.JTextField txtGioBatDau;
    private javax.swing.JTextField txtGioKetThuc;
    private com.toedter.calendar.JDateChooser txtNgayLam;
    // End of variables declaration//GEN-END:variables
}
