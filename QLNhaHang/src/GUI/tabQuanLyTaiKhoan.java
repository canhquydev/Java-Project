/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import CRUD.layDuLieuSQL;
import Object.NhanVien;
import Object.TaiKhoan;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import java.awt.Color;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Connection;
import java.sql.Date;
import java.time.LocalDate;


/**
 *
 * @author HoCanhQuy
 */
public class tabQuanLyTaiKhoan extends javax.swing.JPanel {

    DefaultTableModel tableModel;
    int selectedRow = -1;
    layDuLieuSQL layDuLieu = new layDuLieuSQL();
    public tabQuanLyTaiKhoan() {
        initComponents();
        layDuLieu();
        tbHienThiTaiKhoan.setShowGrid(true);
        tbHienThiTaiKhoan.setGridColor(new Color(224, 224, 224));
        FlatSVGIcon iconAdd = new FlatSVGIcon("Images/add.svg", 25, 25);
        btnThemTaiKhoan.setIcon(iconAdd);
        FlatSVGIcon iconDel = new FlatSVGIcon("Images/delete.svg", 25, 25);
        btnXoaTaiKhoan.setIcon(iconDel);
        FlatSVGIcon iconChange = new FlatSVGIcon("Images/edit.svg", 25, 25);
        btnSuaTaiKhoan.setIcon(iconChange);
        FlatSVGIcon iconRefresh = new FlatSVGIcon("Images/refresh.svg", 25, 25);
        btnLamMoi.setIcon(iconRefresh);
    }

    public void layDuLieu(){
        tableModel = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; 
            }
        };
        tableModel.addColumn("Mã tài khoản");
        tableModel.addColumn("Tên đăng nhập");
        tableModel.addColumn("Mật khẩu");
        tableModel.addColumn("Ngày tạo");
        tableModel.addColumn("Trạng thái");
        tableModel.addColumn("Loại tài khoản");
        tableModel.addColumn("Mã nhân viên");
        
        for(TaiKhoan tk: layDuLieu.getDsTaiKhoan()){
            tableModel.addRow(new Object[]{
                tk.getMaTaiKhoan(),
                tk.getTenDangNhap(),
                tk.getMatKhau(),
                tk.getNgayTao(),
                tk.getTrangThai(),
                tk.getLoaiTaiKhoan(),
                tk.getMaNhanVien()
            });
        }
        tbHienThiTaiKhoan.setModel(tableModel);
        
        cbTrangThai.removeAllItems();
        cbTrangThai.addItem("Chọn trạng thái");
        cbTrangThai.addItem("Hoạt động");
        cbTrangThai.addItem("Vô hiệu hoá");
        
        cbTenNhanVien.removeAllItems();
        cbTenNhanVien.addItem("Chọn nhân viên");
        for(NhanVien nv: layDuLieu.getDsNhanVien()){
            cbTenNhanVien.addItem(nv.getHoTen());
        }
        
        cbLoaiTaiKhoan.removeAllItems();
        Set<String> set = new HashSet<>();
        for(TaiKhoan tk: layDuLieu.getDsTaiKhoan()){
            set.add(tk.getLoaiTaiKhoan());
        }
        cbLoaiTaiKhoan.addItem("Chọn loại tài khoản");
        for(String str: set){
            cbLoaiTaiKhoan.addItem(str);
        }
    }
    
    public boolean checked(){
        if(txtUser.getText().equals("") == true){
            return false;
        }
        if(txtPass.getText().equals("") == true){
            return false;
        }
        if(cbTrangThai.getSelectedIndex() <= 0){
            return false;
        }
        if(cbLoaiTaiKhoan.getSelectedIndex() <= 0){
            return false;
        }
        if(cbTenNhanVien.getSelectedIndex() <= 0){
            return false;
        }
        return true;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cbTenNhanVien = new javax.swing.JComboBox<>();
        cbLoaiTaiKhoan = new javax.swing.JComboBox<>();
        txtPass = new javax.swing.JPasswordField();
        cbTrangThai = new javax.swing.JComboBox<>();
        txtNgayTao = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        btnThemTaiKhoan = new javax.swing.JButton();
        btnXoaTaiKhoan = new javax.swing.JButton();
        btnSuaTaiKhoan = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbHienThiTaiKhoan = new javax.swing.JTable();

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin tài khoản", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        jLabel3.setText("Mật khẩu:");

        jLabel4.setText("Loại tài khoản:");

        jLabel5.setText("Tên đăng nhập:");

        jLabel6.setText("Trạng thái:");

        jLabel7.setText("Tên nhân viên:");

        jLabel8.setText("Ngày tạo:");

        cbTenNhanVien.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbLoaiTaiKhoan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtPass.setText("jPasswordField1");

        cbTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtNgayTao.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtUser, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPass, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                    .addComponent(txtNgayTao))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbTenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cbLoaiTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(cbTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbLoaiTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(cbTenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtNgayTao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Các thao tác", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        btnThemTaiKhoan.setBackground(new java.awt.Color(51, 204, 255));
        btnThemTaiKhoan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThemTaiKhoan.setText("Thêm tài khoản");
        btnThemTaiKhoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemTaiKhoanActionPerformed(evt);
            }
        });

        btnXoaTaiKhoan.setBackground(new java.awt.Color(51, 204, 255));
        btnXoaTaiKhoan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXoaTaiKhoan.setForeground(new java.awt.Color(51, 51, 51));
        btnXoaTaiKhoan.setText("Xóa tài khoản");
        btnXoaTaiKhoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTaiKhoanActionPerformed(evt);
            }
        });

        btnSuaTaiKhoan.setBackground(new java.awt.Color(51, 204, 255));
        btnSuaTaiKhoan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSuaTaiKhoan.setText("Sửa thông tin");
        btnSuaTaiKhoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaTaiKhoanActionPerformed(evt);
            }
        });

        btnLamMoi.setBackground(new java.awt.Color(51, 204, 255));
        btnLamMoi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnThemTaiKhoan, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                    .addComponent(btnXoaTaiKhoan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSuaTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemTaiKhoan)
                    .addComponent(btnSuaTaiKhoan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoaTaiKhoan)
                    .addComponent(btnLamMoi))
                .addGap(25, 25, 25))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách tài khoản", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        tbHienThiTaiKhoan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        tbHienThiTaiKhoan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHienThiTaiKhoanMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbHienThiTaiKhoan);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 965, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 905, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 335, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemTaiKhoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemTaiKhoanActionPerformed
        // TODO add your handling code here:
        if (!checked()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String tenDangNhap = txtUser.getText().trim();
        String matKhau = new String(txtPass.getPassword());
        LocalDate date = LocalDate.now();
        String ngayTao = Date.valueOf(date).toString();
        String trangThai = cbTrangThai.getSelectedItem().toString();
        String loaiTaiKhoan = cbLoaiTaiKhoan.getSelectedItem().toString();
        String tenNhanVien = cbTenNhanVien.getSelectedItem().toString();

        Integer maNhanVien = null;
        for (NhanVien nv : layDuLieu.getDsNhanVien()) {
            if (nv.getHoTen().trim().equals(tenNhanVien.trim())) {
                maNhanVien = nv.getMaNhanVien();
                break;
            }
        }

        if (maNhanVien == null) {
            JOptionPane.showMessageDialog(this, "Lỗi không tìm thấy nhân viên!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Connection conn = null;
        try {
            conn = CRUD.ConnectSQL.getConnection();
            conn.setAutoCommit(false);

            // Kiểm tra tên đăng nhập đã tồn tại chưa
            String checkUserSql = "SELECT COUNT(*) FROM TAIKHOAN WHERE tenDangNhap = ?";
            try (PreparedStatement ps = conn.prepareStatement(checkUserSql)) {
                ps.setString(1, tenDangNhap);
                ResultSet rs = ps.executeQuery();
                if (rs.next() && rs.getInt(1) > 0) {
                    JOptionPane.showMessageDialog(this, "Tên đăng nhập đã tồn tại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    conn.rollback();
                    return;
                }
            }

            // Kiểm tra nhân viên này đã có tài khoản chưa
            String checkNvSql = "SELECT COUNT(*) FROM TAIKHOAN WHERE maNhanVien = ?";
            try (PreparedStatement ps = conn.prepareStatement(checkNvSql)) {
                ps.setInt(1, maNhanVien);
                ResultSet rs = ps.executeQuery();
                if (rs.next() && rs.getInt(1) > 0) {
                    JOptionPane.showMessageDialog(this, "Nhân viên này đã có tài khoản!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    conn.rollback();
                    return;
                }
            }

            // Thêm tài khoản mới
            String insertSql = "INSERT INTO TAIKHOAN (tenDangNhap, matKhau, ngayTao, trangThai, loaiTaiKhoan, maNhanVien) VALUES (?, ?, ?, ?, ?, ?)";
            try (PreparedStatement ps = conn.prepareStatement(insertSql)) {
                ps.setString(1, tenDangNhap);
                ps.setString(2, matKhau);
                ps.setString(3, ngayTao);
                ps.setString(4, trangThai);
                ps.setString(5, loaiTaiKhoan);
                ps.setInt(6, maNhanVien);

                int result = ps.executeUpdate();
                if (result > 0) {
                    conn.commit();
                    JOptionPane.showMessageDialog(this, "Thêm tài khoản thành công!");
                    layDuLieu();
                } else {
                    conn.rollback();
                    JOptionPane.showMessageDialog(this, "Thêm tài khoản thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (SQLException ex) {
            try {
                if (conn != null) conn.rollback();
            } catch (SQLException e) {}
            JOptionPane.showMessageDialog(this, "Lỗi SQL: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (conn != null) conn.close();
            } catch (SQLException e) {}
        }
    }//GEN-LAST:event_btnThemTaiKhoanActionPerformed

    private void btnXoaTaiKhoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTaiKhoanActionPerformed
        // TODO add your handling code here:
        selectedRow = tbHienThiTaiKhoan.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một tài khoản để xóa!", "Lỗi", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa tài khoản này?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        int maTaiKhoan = Integer.parseInt(tableModel.getValueAt(selectedRow, 0).toString());

        try (Connection conn = CRUD.ConnectSQL.getConnection()) {
            String sql = "DELETE FROM TAIKHOAN WHERE maTaiKhoan = ?";
            try (PreparedStatement ps = conn.prepareStatement(sql)) {
                ps.setInt(1, maTaiKhoan);
                int result = ps.executeUpdate();
                if (result > 0) {
                    JOptionPane.showMessageDialog(this, "Xóa tài khoản thành công!");
                    layDuLieu();
                } else {
                    JOptionPane.showMessageDialog(this, "Xóa tài khoản thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi SQL: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnXoaTaiKhoanActionPerformed

    private void btnSuaTaiKhoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaTaiKhoanActionPerformed
        selectedRow = tbHienThiTaiKhoan.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một tài khoản để sửa!", "Lỗi", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (!checked()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int maTaiKhoan = Integer.parseInt(tableModel.getValueAt(selectedRow, 0).toString());
        String tenDangNhap = txtUser.getText().trim();
        String matKhau = new String(txtPass.getPassword());
        String ngayTao = txtNgayTao.getText();
        String trangThai = cbTrangThai.getSelectedItem().toString();
        String loaiTaiKhoan = cbLoaiTaiKhoan.getSelectedItem().toString();
        String tenNhanVien = cbTenNhanVien.getSelectedItem().toString();

        // Tìm mã nhân viên từ tên được chọn
        Integer maNhanVien = null;
        for (NhanVien nv : layDuLieu.getDsNhanVien()) {
            if (nv.getHoTen().trim().equals(tenNhanVien.trim())) {
                maNhanVien = nv.getMaNhanVien();
                break;
            }
        }

        Connection conn = null;
        try {
            conn = CRUD.ConnectSQL.getConnection();
            conn.setAutoCommit(false);

            String checkUserSql = "SELECT COUNT(*) FROM TAIKHOAN WHERE tenDangNhap = ? AND maTaiKhoan != ?";
            try (PreparedStatement ps = conn.prepareStatement(checkUserSql)) {
                ps.setString(1, tenDangNhap);
                ps.setInt(2, maTaiKhoan);
                ResultSet rs = ps.executeQuery();
                if (rs.next() && rs.getInt(1) > 0) {
                    JOptionPane.showMessageDialog(this, "Tên đăng nhập đã tồn tại ở tài khoản khác!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    conn.rollback();
                    return;
                }
            }

            String updateSql = "UPDATE TAIKHOAN SET tenDangNhap = ?, matKhau = ?, ngayTao = ?, trangThai = ?, loaiTaiKhoan = ?, maNhanVien = ? WHERE maTaiKhoan = ?";
            try (PreparedStatement ps = conn.prepareStatement(updateSql)) {
                ps.setString(1, tenDangNhap);
                ps.setString(2, matKhau);
                ps.setString(3, ngayTao);
                ps.setString(4, trangThai);
                ps.setString(5, loaiTaiKhoan);
                ps.setInt(6, maNhanVien);
                ps.setInt(7, maTaiKhoan);

                int result = ps.executeUpdate();
                if (result > 0) {
                    conn.commit();
                    JOptionPane.showMessageDialog(this, "Cập nhật thông tin tài khoản thành công!");
                    layDuLieu();
                } else {
                    conn.rollback();
                    JOptionPane.showMessageDialog(this, "Cập nhật thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (SQLException ex) {
            try {
                if (conn != null) conn.rollback();
            } catch (SQLException e) {}
            JOptionPane.showMessageDialog(this, "Lỗi SQL: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (conn != null) conn.close();
            } catch (SQLException e) {}
        }
    }//GEN-LAST:event_btnSuaTaiKhoanActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        txtUser.setText("");
        txtPass.setText("");
        cbLoaiTaiKhoan.setSelectedIndex(0);
        txtNgayTao.setText("");
        cbTrangThai.setSelectedIndex(0);
        cbLoaiTaiKhoan.setSelectedIndex(0);
        cbTenNhanVien.setSelectedIndex(0);
        layDuLieu();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void tbHienThiTaiKhoanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHienThiTaiKhoanMouseClicked
        // TODO add your handling code here:
        selectedRow = tbHienThiTaiKhoan.getSelectedRow();
        if(selectedRow >= 0){
            txtUser.setText(tbHienThiTaiKhoan.getValueAt(selectedRow, 1).toString().trim());
            txtPass.setText(tbHienThiTaiKhoan.getValueAt(selectedRow, 2).toString());
            txtNgayTao.setText(tbHienThiTaiKhoan.getValueAt(selectedRow, 3).toString());
            cbTrangThai.setSelectedItem(tbHienThiTaiKhoan.getValueAt(selectedRow, 4).toString());
            cbLoaiTaiKhoan.setSelectedItem(tbHienThiTaiKhoan.getValueAt(selectedRow, 5).toString().trim());
            int maNV = Integer.parseInt(tbHienThiTaiKhoan.getValueAt(selectedRow, 6).toString());
            for(NhanVien nv: layDuLieu.getDsNhanVien()){
                if(nv.getMaNhanVien() == maNV){
                    cbTenNhanVien.setSelectedItem(nv.getHoTen());
                    break;
                }
            }
        }
    }//GEN-LAST:event_tbHienThiTaiKhoanMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSuaTaiKhoan;
    private javax.swing.JButton btnThemTaiKhoan;
    private javax.swing.JButton btnXoaTaiKhoan;
    private javax.swing.JComboBox<String> cbLoaiTaiKhoan;
    private javax.swing.JComboBox<String> cbTenNhanVien;
    private javax.swing.JComboBox<String> cbTrangThai;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tbHienThiTaiKhoan;
    private javax.swing.JTextField txtNgayTao;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
}
