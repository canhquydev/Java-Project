/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import CRUD.layDuLieuSQL;
import Object.ChiTietNhapHang;
import Object.NguyenLieu;
import Object.PhieuNhapHang;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import java.awt.Color;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
/**
 *
 * @author HoCanhQuy
 */
public class tabQuanLyNhapHang extends javax.swing.JPanel {

    DefaultTableModel tableModel, model;
    layDuLieuSQL layDuLieu = new layDuLieuSQL();
    int selected = -1;
    int maNV;
    public tabQuanLyNhapHang() {
        initComponents();
        
    }
    public tabQuanLyNhapHang(int maNV){
        initComponents();
        this.maNV = maNV;
        layDuLieu();
        tbPhieuNhap.setShowGrid(true);
        tbPhieuNhap.setGridColor(new Color(224, 224, 224));
        tbChiTietPhieuNhap.setShowGrid(true);
        tbChiTietPhieuNhap.setGridColor(new Color(224, 224, 224));
        FlatSVGIcon iconAdd = new FlatSVGIcon("Images/add.svg", 25, 25);
        btnThemNguyenLieu.setIcon(iconAdd);
        FlatSVGIcon iconDel = new FlatSVGIcon("Images/delete.svg", 25, 25);
        btnXoaNguyenLieu.setIcon(iconDel);
        FlatSVGIcon iconCreate = new FlatSVGIcon("Images/createnew.svg", 25, 25);
        btnThemPhieu.setIcon(iconCreate);
    }
    public void layChiTiet(int maPhieuNhap){
        model = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; 
            }
        };
        model.addColumn("Mã phiếu");
        model.addColumn("Nguyên liệu");
        model.addColumn("Số lượng");
        model.addColumn("Đơn giá");
        for(ChiTietNhapHang phieu: layDuLieu.getDsChiTietNhapHang()){
            if(phieu.getMaPhieuNhap()== maPhieuNhap){
                String tenNguyenLieu = "";
                for(NguyenLieu nl: layDuLieu.getDsNguyenLieu()){
                    if(nl.getMaNguyenLieu() == phieu.getMaNguyenLieu()){
                        tenNguyenLieu = nl.getTenNguyenLieu();
                    }
                }
                model.addRow(new Object[]{
                    phieu.getMaPhieuNhap(),
                    tenNguyenLieu,
                    phieu.getSoLuongNhap(),
                    phieu.getDonGia()
                });
            }
        }
        tbChiTietPhieuNhap.setModel(model);
    }
    
    public void layDuLieu(){
        tableModel = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; 
            }
        };
        tableModel.addColumn("Mã phiếu");
        tableModel.addColumn("Ngày tạo");
        tableModel.addColumn("Nhà cung cấp");
        tableModel.addColumn("Nhân viên tạo");
        
        cbMaPhieuNhap.removeAllItems();
        cbMaPhieuNhap.addItem("Chọn phiếu nhập");
        for(PhieuNhapHang pnh: layDuLieu.getDsPhieuNhapHang()){
            cbMaPhieuNhap.addItem(String.valueOf(pnh.getMaPhieuNhap()));
            tableModel.addRow(new Object[]{
                pnh.getMaPhieuNhap(),
                pnh.getNgayTao(),
                pnh.getNhaCungCap(),
                pnh.getMaNhanVienNhap()
            });
        }
        tbPhieuNhap.setModel(tableModel);
        
        cbNguyenLieu.removeAllItems();
        for(NguyenLieu nl: layDuLieu.getDsNguyenLieu()){
            cbNguyenLieu.addItem(nl.getTenNguyenLieu());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        pnChucNang = new javax.swing.JPanel();
        btnThemPhieu = new javax.swing.JButton();
        btnThemNguyenLieu = new javax.swing.JButton();
        btnXoaNguyenLieu = new javax.swing.JButton();
        pnThongTinChiTiet = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbChiTietPhieuNhap = new javax.swing.JTable();
        pnDanhSach = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPhieuNhap = new javax.swing.JTable();
        pnThongTinPhieuNhap = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDonGia = new javax.swing.JTextField();
        txtSoLuong = new javax.swing.JSpinner();
        cbNguyenLieu = new javax.swing.JComboBox<>();
        cbMaPhieuNhap = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txtNhaCungCap = new javax.swing.JTextField();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        pnChucNang.setBackground(new java.awt.Color(255, 255, 255));
        pnChucNang.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chức năng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14), new java.awt.Color(51, 51, 51))); // NOI18N

        btnThemPhieu.setBackground(new java.awt.Color(51, 204, 255));
        btnThemPhieu.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThemPhieu.setText("Tạo phiếu mới");
        btnThemPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemPhieuActionPerformed(evt);
            }
        });

        btnThemNguyenLieu.setBackground(new java.awt.Color(51, 204, 255));
        btnThemNguyenLieu.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThemNguyenLieu.setText("Thêm nguyên liệu");
        btnThemNguyenLieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemNguyenLieuActionPerformed(evt);
            }
        });

        btnXoaNguyenLieu.setBackground(new java.awt.Color(51, 204, 255));
        btnXoaNguyenLieu.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXoaNguyenLieu.setText("Xoá nguyên liệu");
        btnXoaNguyenLieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaNguyenLieuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnChucNangLayout = new javax.swing.GroupLayout(pnChucNang);
        pnChucNang.setLayout(pnChucNangLayout);
        pnChucNangLayout.setHorizontalGroup(
            pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnChucNangLayout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThemNguyenLieu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnThemPhieu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnXoaNguyenLieu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(83, 83, 83))
        );
        pnChucNangLayout.setVerticalGroup(
            pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnChucNangLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(btnThemPhieu)
                .addGap(18, 18, 18)
                .addComponent(btnXoaNguyenLieu)
                .addGap(18, 18, 18)
                .addComponent(btnThemNguyenLieu)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnThongTinChiTiet.setBackground(new java.awt.Color(255, 255, 255));
        pnThongTinChiTiet.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin chi tiết", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        tbChiTietPhieuNhap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã phiếu", "Nguyên liệu", "Số lượng ", "Đơn giá"
            }
        ));
        jScrollPane3.setViewportView(tbChiTietPhieuNhap);

        javax.swing.GroupLayout pnThongTinChiTietLayout = new javax.swing.GroupLayout(pnThongTinChiTiet);
        pnThongTinChiTiet.setLayout(pnThongTinChiTietLayout);
        pnThongTinChiTietLayout.setHorizontalGroup(
            pnThongTinChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
        );
        pnThongTinChiTietLayout.setVerticalGroup(
            pnThongTinChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pnDanhSach.setBackground(new java.awt.Color(255, 255, 255));
        pnDanhSach.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách phiếu nhập", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        tbPhieuNhap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbPhieuNhap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPhieuNhapMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbPhieuNhap);

        javax.swing.GroupLayout pnDanhSachLayout = new javax.swing.GroupLayout(pnDanhSach);
        pnDanhSach.setLayout(pnDanhSachLayout);
        pnDanhSachLayout.setHorizontalGroup(
            pnDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        pnDanhSachLayout.setVerticalGroup(
            pnDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDanhSachLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pnThongTinPhieuNhap.setBackground(new java.awt.Color(255, 255, 255));
        pnThongTinPhieuNhap.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin phiếu nhập", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        jLabel2.setText("Mã phiếu:");

        jLabel3.setText("Nguyên liệu:");

        jLabel4.setText("Số lượng:");

        jLabel5.setText("Đơn giá:");

        cbNguyenLieu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbMaPhieuNhap.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbMaPhieuNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMaPhieuNhapActionPerformed(evt);
            }
        });

        jLabel1.setText("Nhà cung cấp:");

        txtNhaCungCap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNhaCungCapActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnThongTinPhieuNhapLayout = new javax.swing.GroupLayout(pnThongTinPhieuNhap);
        pnThongTinPhieuNhap.setLayout(pnThongTinPhieuNhapLayout);
        pnThongTinPhieuNhapLayout.setHorizontalGroup(
            pnThongTinPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnThongTinPhieuNhapLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(pnThongTinPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnThongTinPhieuNhapLayout.createSequentialGroup()
                        .addGroup(pnThongTinPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2))
                        .addGap(41, 41, 41)
                        .addGroup(pnThongTinPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbNguyenLieu, 0, 391, Short.MAX_VALUE)
                            .addComponent(cbMaPhieuNhap, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDonGia)
                            .addComponent(txtSoLuong)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnThongTinPhieuNhapLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(32, 32, 32)
                        .addComponent(txtNhaCungCap)))
                .addGap(40, 40, 40))
        );
        pnThongTinPhieuNhapLayout.setVerticalGroup(
            pnThongTinPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnThongTinPhieuNhapLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(pnThongTinPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNhaCungCap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnThongTinPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbMaPhieuNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(pnThongTinPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbNguyenLieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnThongTinPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnThongTinPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(13, 13, 13))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnDanhSach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnThongTinChiTiet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnThongTinPhieuNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnChucNang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnThongTinPhieuNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnChucNang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnDanhSach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnThongTinChiTiet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemPhieuActionPerformed
        // TODO add your handling code here:
        String nhaCungCap = txtNhaCungCap.getText().trim();
        if (nhaCungCap.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập nhà cung cấp!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        java.sql.Date ngayTao = new java.sql.Date(new Date().getTime());

        String sql = "INSERT INTO PHIEUNHAPHANG (ngayTao, nhaCungCap, maNhanVienNhap) VALUES (?, ?, ?)";

        try (Connection conn = CRUD.ConnectSQL.getConnection();
            PreparedStatement ps = conn.prepareStatement(sql)) {

            ps.setDate(1, ngayTao);
            ps.setString(2, nhaCungCap);
            ps.setInt(3, maNV);

            int result = ps.executeUpdate();
            if (result > 0) {
                JOptionPane.showMessageDialog(this, "Tạo phiếu nhập mới thành công!");
                layDuLieu();
                txtNhaCungCap.setText("");
            } else {
                JOptionPane.showMessageDialog(this, "Tạo phiếu nhập thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi SQL khi tạo phiếu: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnThemPhieuActionPerformed

    private void btnThemNguyenLieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemNguyenLieuActionPerformed
        // TODO add your handling code here:
        if (cbMaPhieuNhap.getSelectedIndex() <= 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một phiếu nhập!", "Lỗi", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int soLuong;
        try {
            soLuong = (Integer) txtSoLuong.getValue();
            if (soLuong <= 0) {
                JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn 0!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Số lượng không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        long donGia;
        try {
            donGia = Long.parseLong(txtDonGia.getText());
            if(donGia < 0) {
                JOptionPane.showMessageDialog(this, "Đơn giá không được âm!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Đơn giá không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        long thanhTien = soLuong*donGia;
        int maPhieuNhap = Integer.parseInt(cbMaPhieuNhap.getSelectedItem().toString());
        String tenNguyenLieu = cbNguyenLieu.getSelectedItem().toString();

        Integer maNguyenLieu = null;
        for (NguyenLieu nl : layDuLieu.getDsNguyenLieu()) {
            if (nl.getTenNguyenLieu().equals(tenNguyenLieu)) {
                maNguyenLieu = nl.getMaNguyenLieu();
                break;
            }
        }
        if (maNguyenLieu == null) {
            JOptionPane.showMessageDialog(this, "Lỗi không tìm thấy nguyên liệu!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Connection conn = null;
        try {
            conn = CRUD.ConnectSQL.getConnection();
            conn.setAutoCommit(false);

            String checkSql = "SELECT COUNT(*) FROM CHITIETNHAPHANG WHERE maPhieuNhap = ? AND maNguyenLieu = ?";
            try (PreparedStatement psCheck = conn.prepareStatement(checkSql)) {
                psCheck.setInt(1, maPhieuNhap);
                psCheck.setInt(2, maNguyenLieu);
                var rs = psCheck.executeQuery();
                if (rs.next() && rs.getInt(1) > 0) {
                    JOptionPane.showMessageDialog(this, "Nguyên liệu này đã tồn tại trong phiếu nhập!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    conn.rollback();
                    return;
                }
            }

            String insertSql = "INSERT INTO CHITIETNHAPHANG (maPhieuNhap, maNguyenLieu, soLuongNhap, donGia, thanhTien) VALUES (?, ?, ?, ?, ?)";
            try (PreparedStatement psInsert = conn.prepareStatement(insertSql)) {
                psInsert.setInt(1, maPhieuNhap);
                psInsert.setInt(2, maNguyenLieu);
                psInsert.setInt(3, soLuong);
                psInsert.setLong(4, donGia);
                psInsert.setLong(5, thanhTien);
                psInsert.executeUpdate();
            }

            // Cập nhật số lượng tồn kho
            //            String updateSql = "UPDATE NGUYENLIEU SET soLuongTon = soLuongTon + ? WHERE maNguyenLieu = ?";
            //            try (PreparedStatement psUpdate = conn.prepareStatement(updateSql)) {
                //                psUpdate.setInt(1, soLuong);
                //                psUpdate.setInt(2, maNguyenLieu);
                //                psUpdate.executeUpdate();
                //            }

            conn.commit();
            JOptionPane.showMessageDialog(this, "Thêm nguyên liệu vào phiếu thành công!");
            layChiTiet(maPhieuNhap);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi SQL: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            if (conn != null) {
                try {
                    conn.rollback();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        } finally {
            if (conn != null) {
                try {
                    conn.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_btnThemNguyenLieuActionPerformed

    private void btnXoaNguyenLieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaNguyenLieuActionPerformed
        // TODO add your handling code here:
        int selectedDetailRow = tbChiTietPhieuNhap.getSelectedRow();
        if (selectedDetailRow < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một nguyên liệu trong bảng chi tiết để xóa!", "Lỗi", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa nguyên liệu này khỏi phiếu?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        // Lấy thông tin cần thiết từ bảng
        int maPhieuNhap = (Integer) tbChiTietPhieuNhap.getValueAt(selectedDetailRow, 0);
        String tenNguyenLieu = tbChiTietPhieuNhap.getValueAt(selectedDetailRow, 1).toString();

        // Tìm mã nguyên liệu
        Integer maNguyenLieu = null;
        for (NguyenLieu nl : layDuLieu.getDsNguyenLieu()) {
            if (nl.getTenNguyenLieu().equals(tenNguyenLieu)) {
                maNguyenLieu = nl.getMaNguyenLieu();
                break;
            }
        }
        if (maNguyenLieu == null) {
            JOptionPane.showMessageDialog(this, "Lỗi không tìm thấy mã nguyên liệu!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Chỉ cần thực hiện lệnh DELETE. Trigger sẽ tự động xử lý việc cập nhật tồn kho.
        String deleteSql = "DELETE FROM CHITIETNHAPHANG WHERE maPhieuNhap = ? AND maNguyenLieu = ?";
        try (Connection conn = CRUD.ConnectSQL.getConnection();
            PreparedStatement psDelete = conn.prepareStatement(deleteSql)) {

            psDelete.setInt(1, maPhieuNhap);
            psDelete.setInt(2, maNguyenLieu);

            int result = psDelete.executeUpdate();
            if (result > 0) {
                JOptionPane.showMessageDialog(this, "Xóa nguyên liệu khỏi phiếu thành công!");
                layChiTiet(maPhieuNhap); // Tải lại bảng chi tiết
            }
        } catch (SQLException ex) {
            // Lỗi từ RAISERROR trong trigger sẽ được bắt và hiển thị ở đây
            JOptionPane.showMessageDialog(this, "Lỗi khi xóa: " + ex.getMessage(), "Lỗi từ CSDL", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnXoaNguyenLieuActionPerformed

    private void tbPhieuNhapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPhieuNhapMouseClicked
        // TODO add your handling code here:
        selected = tbPhieuNhap.getSelectedRow();
        int maPhieu = Integer.parseInt(tbPhieuNhap.getValueAt(selected, 0).toString());
        cbMaPhieuNhap.setSelectedItem(String.valueOf(maPhieu));
        layChiTiet(maPhieu);
    }//GEN-LAST:event_tbPhieuNhapMouseClicked

    private void cbMaPhieuNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMaPhieuNhapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbMaPhieuNhapActionPerformed

    private void txtNhaCungCapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNhaCungCapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNhaCungCapActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThemNguyenLieu;
    private javax.swing.JButton btnThemPhieu;
    private javax.swing.JButton btnXoaNguyenLieu;
    private javax.swing.JComboBox<String> cbMaPhieuNhap;
    private javax.swing.JComboBox<String> cbNguyenLieu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JPanel pnChucNang;
    private javax.swing.JPanel pnDanhSach;
    private javax.swing.JPanel pnThongTinChiTiet;
    private javax.swing.JPanel pnThongTinPhieuNhap;
    private javax.swing.JTable tbChiTietPhieuNhap;
    private javax.swing.JTable tbPhieuNhap;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtNhaCungCap;
    private javax.swing.JSpinner txtSoLuong;
    // End of variables declaration//GEN-END:variables
}
