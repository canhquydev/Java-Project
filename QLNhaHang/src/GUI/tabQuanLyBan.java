/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import CRUD.ConnectSQL;
import CRUD.layDuLieuSQL;
import Object.Ban;
import Object.ChiTietDatBan;
import Object.KhachHang;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.util.HashSet;
import java.util.Set;
/**
 *
 * @author HoCanhQuy
 */
public class tabQuanLyBan extends javax.swing.JPanel {

    DefaultTableModel tableModel, model;
    layDuLieuSQL layDuLieu = new layDuLieuSQL();
    int selected = -1;
    public tabQuanLyBan() {
        initComponents();
        layDuLieu();
        tbBan.setShowGrid(true);
        tbBan.setGridColor(new Color(224, 224, 224));
        tbChiTietBan.setShowGrid(true);
        tbChiTietBan.setGridColor(new Color(224, 224, 224));
        FlatSVGIcon iconAdd = new FlatSVGIcon("Images/add.svg", 25, 25);
        btnThem.setIcon(iconAdd);
        FlatSVGIcon iconDel = new FlatSVGIcon("Images/delete.svg", 25, 25);
        btnXoa.setIcon(iconDel);
        FlatSVGIcon iconChange = new FlatSVGIcon("Images/edit.svg", 25, 25);
        btnSua.setIcon(iconChange);
        FlatSVGIcon iconnew = new FlatSVGIcon("Images/refresh.svg", 25, 25);
        btnLamMoi.setIcon(iconnew);
        FlatSVGIcon iconDele = new FlatSVGIcon("Images/delete.svg", 25, 25);
        btnXoaChiTietBan.setIcon(iconDele);
        FlatSVGIcon iconCreate = new FlatSVGIcon("Images/add.svg", 25, 25);
        btnThemChiTiet.setIcon(iconCreate);
    }
    public void layChiTiet(int maBan){
        model = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; 
            }
        };
        
        model.addColumn("Loại bàn");
        model.addColumn("Tên khách hàng");
        model.addColumn("Số lượng bàn");
        for(ChiTietDatBan ct: layDuLieu.getDsChiTietDatBan()){
            if(ct.getMaBan()== maBan){
                String tenBan = "";
                for(Ban ban: layDuLieu.getDsBan()){
                    if(ban.getMaBan() == ct.getMaBan()){
                        tenBan = ban.getLoaiBan();
                        break;
                    }
                }
                String tenKhachHang = "";
                for(KhachHang kh: layDuLieu.getDsKhachHang()){
                    if(ct.getMaKhachHang() == kh.getMaKhachHang()){
                        tenKhachHang = kh.getTenKhachHang();
                        break;
                    }
                }
                model.addRow(new Object[]{
                    tenBan,
                    tenKhachHang, 
                    ct.getSoLuongBan()
                });
            }
        }
        tbChiTietBan.setModel(model);
    }
    
    public void layDuLieu(){
        tableModel = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; 
            }
        };
        tableModel.addColumn("Mã bàn");
        tableModel.addColumn("Loại bàn");
        tableModel.addColumn("Số lượng chỗ");
        tableModel.addColumn("Số lượng còn");
        tableModel.addColumn("Trạng thái");
        
        cbTrangThai.removeAllItems();
        cbTrangThai.addItem("Chọn trạng thái");
        cbTrangThai.addItem("Còn bàn");
        cbTrangThai.addItem("Hết bàn");
        cbMaBan.removeAllItems();
        cbMaBan.addItem("Chọn mã bàn");
        
        Set<String> set = new HashSet<>();
        for(Ban ban: layDuLieu.getDsBan()){
            cbMaBan.addItem(String.valueOf(ban.getMaBan()));
            set.add(ban.getLoaiBan());
            tableModel.addRow(new Object[]{
                ban.getMaBan(),
                ban.getLoaiBan(),
                ban.getSoLuongCho(),
                ban.getSoLuongCon(),
                ban.getTrangThai()
            });
        }
        tbBan.setModel(tableModel);
        
        cbLoaiBan.removeAllItems();
        cbLoaiBan.addItem("Chọn loại bàn");
        for(String s: set){
            cbLoaiBan.addItem(s);
        }
        
        cbTenKhachHang.removeAllItems();
        cbTenKhachHang.addItem("Chọn khách hàng");
        for(KhachHang kh: layDuLieu.getDsKhachHang()){
            cbTenKhachHang.addItem(kh.getTenKhachHang());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        pnDanhSach = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbBan = new javax.swing.JTable();
        pnThongTinChiTiet = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbChiTietBan = new javax.swing.JTable();
        pnChucNang = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtSoLuongBan = new javax.swing.JSpinner();
        btnSua = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cbMaBan = new javax.swing.JComboBox<>();
        btnThemChiTiet = new javax.swing.JButton();
        btnXoaChiTietBan = new javax.swing.JButton();
        cbTenKhachHang = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        pnThongTinPhieuNhap = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtSoLuongCon = new javax.swing.JSpinner();
        cbLoaiBan = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtSoLuongCho = new javax.swing.JSpinner();
        cbTrangThai = new javax.swing.JComboBox<>();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        pnDanhSach.setBackground(new java.awt.Color(255, 255, 255));
        pnDanhSach.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách bàn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        tbBan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbBan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbBanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbBan);

        javax.swing.GroupLayout pnDanhSachLayout = new javax.swing.GroupLayout(pnDanhSach);
        pnDanhSach.setLayout(pnDanhSachLayout);
        pnDanhSachLayout.setHorizontalGroup(
            pnDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        pnDanhSachLayout.setVerticalGroup(
            pnDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDanhSachLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pnThongTinChiTiet.setBackground(new java.awt.Color(255, 255, 255));
        pnThongTinChiTiet.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin chi tiết", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        tbChiTietBan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã phiếu", "Nguyên liệu", "Số lượng ", "Đơn giá"
            }
        ));
        jScrollPane3.setViewportView(tbChiTietBan);

        javax.swing.GroupLayout pnThongTinChiTietLayout = new javax.swing.GroupLayout(pnThongTinChiTiet);
        pnThongTinChiTiet.setLayout(pnThongTinChiTietLayout);
        pnThongTinChiTietLayout.setHorizontalGroup(
            pnThongTinChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE)
        );
        pnThongTinChiTietLayout.setVerticalGroup(
            pnThongTinChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        pnChucNang.setBackground(new java.awt.Color(255, 255, 255));
        pnChucNang.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chức năng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14), new java.awt.Color(51, 51, 51))); // NOI18N

        btnThem.setBackground(new java.awt.Color(51, 204, 255));
        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThem.setText("Thêm bàn");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnLamMoi.setBackground(new java.awt.Color(51, 204, 255));
        btnLamMoi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(51, 204, 255));
        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXoa.setText("Xoá bàn");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel7.setText("Số lượng bàn:");

        btnSua.setBackground(new java.awt.Color(51, 204, 255));
        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSua.setText("Sửa bàn");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        jLabel3.setText("Mã bàn:");

        cbMaBan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnThemChiTiet.setBackground(new java.awt.Color(51, 204, 255));
        btnThemChiTiet.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThemChiTiet.setText("Thêm chi tiết bàn");
        btnThemChiTiet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemChiTietActionPerformed(evt);
            }
        });

        btnXoaChiTietBan.setBackground(new java.awt.Color(51, 204, 255));
        btnXoaChiTietBan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXoaChiTietBan.setText("Xoá chi tiết bàn");
        btnXoaChiTietBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaChiTietBanActionPerformed(evt);
            }
        });

        cbTenKhachHang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel8.setText("Tên khách hàng:");

        javax.swing.GroupLayout pnChucNangLayout = new javax.swing.GroupLayout(pnChucNang);
        pnChucNang.setLayout(pnChucNangLayout);
        pnChucNangLayout.setHorizontalGroup(
            pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnChucNangLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnChucNangLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbMaBan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbTenKhachHang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSoLuongBan, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnChucNangLayout.createSequentialGroup()
                        .addGroup(pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                            .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnLamMoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(20, 20, 20)
                        .addGroup(pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnThemChiTiet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnXoaChiTietBan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(19, 19, 19))
        );
        pnChucNangLayout.setVerticalGroup(
            pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnChucNangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbMaBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cbTenKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSoLuongBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(10, 10, 10)
                .addGroup(pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSua)
                        .addComponent(btnThem))
                    .addComponent(btnThemChiTiet))
                .addGap(10, 10, 10)
                .addGroup(pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnLamMoi)
                        .addComponent(btnXoa))
                    .addComponent(btnXoaChiTietBan, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        pnThongTinPhieuNhap.setBackground(new java.awt.Color(255, 255, 255));
        pnThongTinPhieuNhap.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin bàn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        jLabel2.setText("Loại bàn:");

        jLabel4.setText("Số lượng còn:");

        jLabel5.setText("Trạng thái:");

        cbLoaiBan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("Số lượng chỗ:");

        cbTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout pnThongTinPhieuNhapLayout = new javax.swing.GroupLayout(pnThongTinPhieuNhap);
        pnThongTinPhieuNhap.setLayout(pnThongTinPhieuNhapLayout);
        pnThongTinPhieuNhapLayout.setHorizontalGroup(
            pnThongTinPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnThongTinPhieuNhapLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(pnThongTinPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2))
                .addGap(10, 10, 10)
                .addGroup(pnThongTinPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbLoaiBan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSoLuongCho)
                    .addComponent(txtSoLuongCon)
                    .addComponent(cbTrangThai, 0, 235, Short.MAX_VALUE))
                .addGap(77, 77, 77))
        );
        pnThongTinPhieuNhapLayout.setVerticalGroup(
            pnThongTinPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnThongTinPhieuNhapLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(pnThongTinPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbLoaiBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnThongTinPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSoLuongCho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(3, 3, 3)
                .addGroup(pnThongTinPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSoLuongCon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnThongTinPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnThongTinPhieuNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(pnDanhSach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnThongTinChiTiet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnChucNang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnChucNang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnThongTinPhieuNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnDanhSach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnThongTinChiTiet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(95, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tbBanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbBanMouseClicked
        // TODO add your handling code here:
        selected = tbBan.getSelectedRow();
        if(selected >= 0){
            int maBan = Integer.parseInt(tbBan.getValueAt(selected, 0).toString());
            cbMaBan.setSelectedItem(String.valueOf(maBan));
            layChiTiet(maBan);
            cbLoaiBan.setSelectedItem(tbBan.getValueAt(selected, 1));
            txtSoLuongCho.setValue(Integer.parseInt(tbBan.getValueAt(selected, 2).toString()));
            txtSoLuongCon.setValue(Integer.parseInt(tbBan.getValueAt(selected, 3).toString()));
            cbTrangThai.setSelectedItem(tbBan.getValueAt(selected, 4));
        }
    }//GEN-LAST:event_tbBanMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        String loaiBan = cbLoaiBan.getSelectedItem().toString();
        int soLuongCho = (Integer) txtSoLuongCho.getValue();
        int soLuongCon = (Integer) txtSoLuongCon.getValue();
        String trangThai = cbTrangThai.getSelectedItem().toString();

        if (cbLoaiBan.getSelectedIndex() <= 0 || soLuongCho <= 0 || cbTrangThai.getSelectedIndex() <= 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin hợp lệ cho bàn!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String sql = "{call sp_ThemMoiMotBan(?, ?, ?, ?)}"; //
        try (Connection conn = CRUD.ConnectSQL.getConnection(); //
             CallableStatement cs = conn.prepareCall(sql)) {

            cs.setString(1, loaiBan);
            cs.setInt(2, soLuongCho);
            cs.setInt(3, soLuongCon); 
            cs.setString(4, trangThai);

            cs.execute();
            JOptionPane.showMessageDialog(this, "Thêm bàn thành công!");
            layDuLieu();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi thêm bàn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
        
//        String sql = "INSERT INTO BAN (LoaiBan, SoLuongCho, SoLuongCon, TrangThai) VALUES (?, ?, ?, ?)";
//        try (Connection conn = ConnectSQL.getConnection(); PreparedStatement ps = conn.prepareStatement(sql)) {
//            ps.setString(1, loaiBan);
//            ps.setInt(2, soLuongCho);
//            ps.setInt(3, soLuongCon); // Số lượng còn ban đầu bằng số lượng chỗ
//            ps.setString(4, trangThai);
//
//            ps.executeUpdate();
//            JOptionPane.showMessageDialog(this, "Thêm bàn mới thành công!");
//            layDuLieu();
//        } catch (SQLException ex) {
//            JOptionPane.showMessageDialog(this, "Lỗi khi thêm bàn: " + ex.getMessage(), "Lỗi SQL", JOptionPane.ERROR_MESSAGE);
//        }

    }//GEN-LAST:event_btnThemActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        layDuLieu();
        cbLoaiBan.setSelectedIndex(0);
        txtSoLuongCho.setValue(0);
        txtSoLuongCon.setValue(0);
        cbTrangThai.setSelectedIndex(0);
        cbMaBan.setSelectedIndex(0);
        txtSoLuongBan.setValue(0);
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbBan.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một bàn để xóa!", "Lỗi", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int maBan = (int) tbBan.getValueAt(selectedRow, 0);

        String sql = "{call sp_XoaMotBan(?)}"; //
        try (Connection conn = CRUD.ConnectSQL.getConnection(); //
             CallableStatement cs = conn.prepareCall(sql)) {

            cs.setInt(1, maBan);

            cs.execute();
            JOptionPane.showMessageDialog(this, "Xóa bàn thành công!");
            layDuLieu(); 
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi xoá bàn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
        
//        String sql = "DELETE FROM BAN WHERE MaBan = ?";
//        try (Connection conn = ConnectSQL.getConnection(); PreparedStatement ps = conn.prepareStatement(sql)) {
//            ps.setInt(1, maBan);
//            ps.executeUpdate();
//            JOptionPane.showMessageDialog(this, "Xóa bàn thành công!");
//            layDuLieu();
//        } catch (SQLException ex) {
//            JOptionPane.showMessageDialog(this, "Lỗi khi xóa bàn: " + ex.getMessage(), "Lỗi từ CSDL", JOptionPane.ERROR_MESSAGE);
//        }

    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbBan.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một bàn để sửa!", "Lỗi", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int maBan = (int) tbBan.getValueAt(selectedRow, 0);
        String loaiBan = cbLoaiBan.getSelectedItem().toString();
        int soLuongCho = (Integer) txtSoLuongCho.getValue();
        int soLuongCon = (Integer) txtSoLuongCon.getValue();
        String trangThai = cbTrangThai.getSelectedItem().toString();
        
        String sql = "{call sp_SuaMotBan(?, ?, ?, ?, ?)}"; 
        try (Connection conn = CRUD.ConnectSQL.getConnection(); 
             CallableStatement cs = conn.prepareCall(sql)) {

            cs.setString(1, loaiBan);
            cs.setInt(2, soLuongCho);
            cs.setInt(3, soLuongCon);
            cs.setString(4, trangThai);
            cs.setInt(5, maBan);

            cs.execute();
            JOptionPane.showMessageDialog(this, "Sửa bàn thành công!");
            layDuLieu(); 
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi sửa bàn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
        
//        String sql = "UPDATE BAN SET LoaiBan = ?, SoLuongCho = ?, SoLuongCon = ?, TrangThai = ? WHERE MaBan = ?";
//        try (Connection conn = ConnectSQL.getConnection(); PreparedStatement ps = conn.prepareStatement(sql)) {
//            ps.setString(1, loaiBan);
//            ps.setInt(2, soLuongCho);
//            ps.setInt(3, soLuongCon);
//            ps.setString(4, trangThai);
//            ps.setInt(5, maBan);
//
//            ps.executeUpdate();
//            JOptionPane.showMessageDialog(this, "Cập nhật thông tin bàn thành công!");
//            layDuLieu();
//        } catch (SQLException ex) {
//            JOptionPane.showMessageDialog(this, "Lỗi khi cập nhật bàn: " + ex.getMessage(), "Lỗi SQL", JOptionPane.ERROR_MESSAGE);
//        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnThemChiTietActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemChiTietActionPerformed
        // TODO add your handling code here:
        if (cbMaBan.getSelectedIndex() <= 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn loại bàn muốn đặt!", "Lỗi", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (cbTenKhachHang.getSelectedIndex() <= 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn khách hàng!", "Lỗi", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int soLuongBanDat = (Integer) txtSoLuongBan.getValue();
        if (soLuongBanDat <= 0) {
            JOptionPane.showMessageDialog(this, "Số lượng bàn đặt phải lớn hơn 0!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int maBan = Integer.parseInt(cbMaBan.getSelectedItem().toString());

        String tenKH = cbTenKhachHang.getSelectedItem().toString();
        int maKH = -1;
        for (KhachHang kh : layDuLieu.getDsKhachHang()) {
            if (kh.getTenKhachHang().equals(tenKH)) {
                maKH = kh.getMaKhachHang();
                break;
            }
        }
        String sql = "{call sp_ThemChiTietBan(?, ?, ?)}";
        try(Connection conn = ConnectSQL.getConnection();
            CallableStatement cs = conn.prepareCall(sql)) {
                cs.setInt(1, maKH);
                cs.setInt(2, maBan);
                cs.setInt(3, soLuongBanDat);

                cs.execute();
                JOptionPane.showMessageDialog(this, "Đặt bàn thành công!");
                layDuLieu(); 
//            String checkSql = "SELECT SoLuongCon FROM BAN WHERE MaBan = ?";
//            try(PreparedStatement psCheck = conn.prepareStatement(checkSql)) {
//                psCheck.setInt(1, maBan);
//                ResultSet rs = psCheck.executeQuery();
//                if (rs.next()) {
//                    int soLuongCon = rs.getInt("SoLuongCon");
//                    if (soLuongBanDat > soLuongCon) {
//                        JOptionPane.showMessageDialog(this, "Số lượng bàn đặt (" + soLuongBanDat + ") vượt quá số lượng còn lại (" + soLuongCon + ")!", "Không đủ bàn", JOptionPane.ERROR_MESSAGE);
//                        return; 
//                    }
//                }
//            }

//            String insertSql = "INSERT INTO CHITIETDATBAN (MaKhachHang, MaBan, SoLuongBan) VALUES (?, ?, ?)";
//            try(PreparedStatement psInsert = conn.prepareStatement(insertSql)) {
//                psInsert.setInt(1, maKH);
//                psInsert.setInt(2, maBan);
//                psInsert.setInt(3, soLuongBanDat);
//                psInsert.executeUpdate();
//
//                JOptionPane.showMessageDialog(this, "Đặt bàn thành công!");
//                layDuLieu();
//                layChiTiet(maBan);
            } catch (SQLException ex) {
//                if (ex.getMessage().contains("PRIMARY KEY")) {
//                    JOptionPane.showMessageDialog(this, "Khách hàng này đã đặt loại bàn này rồi!", "Lỗi trùng lặp", JOptionPane.ERROR_MESSAGE);
//                } else {
//                    JOptionPane.showMessageDialog(this, "Lỗi khi đặt bàn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
//                }
                   JOptionPane.showMessageDialog(this, "Lỗi khi đặt bàn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
//        } catch (SQLException ex) {
//            JOptionPane.showMessageDialog(this, "Lỗi kết nối hoặc kiểm tra bàn: " + ex.getMessage(), "Lỗi SQL", JOptionPane.ERROR_MESSAGE);
//        }

    }//GEN-LAST:event_btnThemChiTietActionPerformed

    private void btnXoaChiTietBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaChiTietBanActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbChiTietBan.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một lượt đặt bàn trong bảng chi tiết để xóa!", "Lỗi", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn hủy lượt đặt bàn này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        int maBan = Integer.parseInt(cbMaBan.getSelectedItem().toString());
        String tenKH = tbChiTietBan.getValueAt(selectedRow, 1).toString();
        int maKH = -1;
        for (KhachHang kh : layDuLieu.getDsKhachHang()) {
            if (kh.getTenKhachHang().equals(tenKH)) {
                maKH = kh.getMaKhachHang();
                break;
            }
        }
        
        String sql = "{call sp_XoaChiTietBan(?, ?)}"; 
        try (Connection conn = CRUD.ConnectSQL.getConnection(); 
             CallableStatement cs = conn.prepareCall(sql)) {

            cs.setInt(1, maKH);
            cs.setInt(2, maBan);

            cs.execute();
            JOptionPane.showMessageDialog(this, "Hủy đặt bàn thành công!");
            layDuLieu(); 
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi hủy đặt bàn: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
//        String sql = "DELETE FROM CHITIETDATBAN WHERE MaKhachHang = ? AND MaBan = ?";
//        try(Connection conn = ConnectSQL.getConnection(); PreparedStatement ps = conn.prepareStatement(sql)) {
//            ps.setInt(1, maKH);
//            ps.setInt(2, maBan);
//
//            int result = ps.executeUpdate();
//            if(result > 0) {
//                JOptionPane.showMessageDialog(this, "Hủy đặt bàn thành công!");
//                layDuLieu();
//                layChiTiet(maBan); 
//            }
//        } catch (SQLException ex) {
//            JOptionPane.showMessageDialog(this, "Lỗi khi hủy đặt bàn: " + ex.getMessage(), "Lỗi SQL", JOptionPane.ERROR_MESSAGE);
//        }
    }//GEN-LAST:event_btnXoaChiTietBanActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThemChiTiet;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaChiTietBan;
    private javax.swing.JComboBox<String> cbLoaiBan;
    private javax.swing.JComboBox<String> cbMaBan;
    private javax.swing.JComboBox<String> cbTenKhachHang;
    private javax.swing.JComboBox<String> cbTrangThai;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JPanel pnChucNang;
    private javax.swing.JPanel pnDanhSach;
    private javax.swing.JPanel pnThongTinChiTiet;
    private javax.swing.JPanel pnThongTinPhieuNhap;
    private javax.swing.JTable tbBan;
    private javax.swing.JTable tbChiTietBan;
    private javax.swing.JSpinner txtSoLuongBan;
    private javax.swing.JSpinner txtSoLuongCho;
    private javax.swing.JSpinner txtSoLuongCon;
    // End of variables declaration//GEN-END:variables
}
